// Code generated by MockGen. DO NOT EDIT.
// Source: ./house.go
//
// Generated by this command:
//
//	mockgen -source ./house.go -destination=./mocks/house.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	dto "github.com/shhesterka04/house-service/internal/dto"
	gomock "go.uber.org/mock/gomock"
)

// MockHouseRepo is a mock of HouseRepo interface.
type MockHouseRepo struct {
	ctrl     *gomock.Controller
	recorder *MockHouseRepoMockRecorder
}

// MockHouseRepoMockRecorder is the mock recorder for MockHouseRepo.
type MockHouseRepoMockRecorder struct {
	mock *MockHouseRepo
}

// NewMockHouseRepo creates a new mock instance.
func NewMockHouseRepo(ctrl *gomock.Controller) *MockHouseRepo {
	mock := &MockHouseRepo{ctrl: ctrl}
	mock.recorder = &MockHouseRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHouseRepo) EXPECT() *MockHouseRepoMockRecorder {
	return m.recorder
}

// CreateHouse mocks base method.
func (m *MockHouseRepo) CreateHouse(ctx context.Context, house *dto.House) (*dto.House, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateHouse", ctx, house)
	ret0, _ := ret[0].(*dto.House)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateHouse indicates an expected call of CreateHouse.
func (mr *MockHouseRepoMockRecorder) CreateHouse(ctx, house any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateHouse", reflect.TypeOf((*MockHouseRepo)(nil).CreateHouse), ctx, house)
}
